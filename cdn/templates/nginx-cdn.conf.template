################################################################################
# Nginx CDN Configuration Template
# Multi-Tenant CDN System
################################################################################

proxy_cache_path /var/cache/nginx/cdn
    levels=1:2
    keys_zone=cdn_cache:10m
    max_size=10g
    inactive=30d
    use_temp_path=off;

log_format cdn_access '$remote_addr - $remote_user [$time_local] '
                      '"$request" $status $body_bytes_sent '
                      '"$http_referer" "$http_user_agent" '
                      'tenant="$tenant" cache="$upstream_cache_status"';

################################################################################
# HTTP Server (Redirect to HTTPS)
################################################################################
server {
    listen 80;
    listen [::]:80;
    server_name cdn.example.com;

    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root /var/www/letsencrypt;
    }

    location / {
        return 301 https://$server_name$request_uri;
    }
}

################################################################################
# HTTPS Server (CDN)
################################################################################
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name cdn.example.com;
    root /srv/cdn/www;

    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/cdn.example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/cdn.example.com/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/cdn.example.com/chain.pem;

    # SSL/TLS A+ Rating Configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;
    resolver 8.8.8.8 8.8.4.4 valid=300s;
    resolver_timeout 5s;
    ssl_dhparam /etc/nginx/dhparam.pem;

    # Security Headers (A+ Rating)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:;" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Logging
    access_log /var/log/cdn/cdn-access.log cdn_access;
    error_log /var/log/cdn/cdn-error.log warn;

    # Gzip Compression
    gzip on;
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types text/plain text/css text/xml text/javascript application/json application/javascript application/xml+rss application/rss+xml image/svg+xml;
    gzip_min_length 256;

    # Multi-Tenant CDN Routing: /<tenant>/<file-path>
    location ~ ^/([^/]+)/(.+)$ {
        set $tenant $1;
        set $file_path $2;
        alias /srv/cdn/www/$tenant/$file_path;

        # CORS Headers
        add_header Access-Control-Allow-Origin "*" always;
        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS" always;
        add_header Access-Control-Allow-Headers "Origin, X-Requested-With, Content-Type, Accept, Range" always;

        # Preflight Requests
        if ($request_method = 'OPTIONS') {
            add_header Access-Control-Allow-Origin "*";
            add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
            add_header Access-Control-Max-Age 1728000;
            add_header Content-Length 0;
            return 204;
        }

        # Aggressive Caching (1 year)
        expires 1y;
        add_header Cache-Control "public, immutable";
        etag on;

        try_files $uri =404;
    }

    # Root Location
    location = / {
        default_type text/html;
        return 200 '<!DOCTYPE html>
<html><head><title>Multi-Tenant CDN</title></head>
<body style="font-family:sans-serif;max-width:800px;margin:50px auto;padding:20px;">
<h1>Multi-Tenant CDN</h1>
<p>URL Pattern: https://cdn.example.com/&lt;tenant&gt;/&lt;file-path&gt;</p>
<p>Example: https://cdn.example.com/acme-corp/images/logo.png</p>
</body></html>';
    }

    # Health Check
    location /health {
        access_log off;
        return 200 '{"status":"healthy"}';
        add_header Content-Type application/json;
    }

    # Robots
    location = /robots.txt {
        access_log off;
        return 200 "User-agent: *\nDisallow: /\n";
    }

    # Deny Hidden Files
    location ~ /\. {
        deny all;
        access_log off;
    }

    client_max_body_size 104857600;
}
